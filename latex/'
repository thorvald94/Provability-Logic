\documentclass[../main.tex]{subfiles}

\begin{document}
We will begin this section with define two class' of functions;
the \textit{Partial Recursive Functions} and  the \textit{Turing Computable
functions}. [it will maybe be shown that the two clases' of functions are
eqvivalent. ] The idea behind these two classes of functions is to define what
we intuitively mean with a computable function. The proofs in this section will
be rather informal.

\section{Partial Recursive Functions}
The partial recursive functions is an enlargement of the primitive recursive
functions. The primitive recursive functions is defined in the following way:
\begin{defi}
	The class of primitive recursive functions is the smallest class closed
	under the following schemata:
	\begin{enumerate}[label=\Roman*.]
		\item $S(x)=x+1$ is primitive recursive.
		\item $C(x)=k$ is primitive recursive.
		\item $P^n_i(\x)=x_i$ is primitive recursive.
		\item If $g,h_1,\ldots h_m$ are primitive recursive then so
			is
			$$f(\x)=g(h_1(\x),\ldots,h_m(\x)$$
		\item If $g$ and $h$ are primitive recursive and $n\geq 1$ then
			$f$ is also primitive recursive where:
			\begin{align*}
				f(0,\x)&=g(\x)\\
				f(x_1+1,x_2,\ldots,x_n)&=h(x_1,f(\x),x_2,\ldots,x_n)
			\end{align*}
	\end{enumerate}
\end{defi}
In the appendendix there is a collection of functions that are
primitive recursive.

The primitive recursive functions do not include all computable
functions, so we have to expand them in the following way:
\begin{defi}
		The class of \textit{partial recursive} (from now on some times
		called (p.r) functions is the least class closed under schemata
		I through V and the following VI schema. 
		\begin{enumerate}[label=\Roman*., start=6]
			\item If $\theta(\x,y)$ is a partial recursive function
				of $n+1$ variables and 
				\begin{align*}
					\psi(\x)=\mu
					y&[\theta(\x,y)\downarrow=0\\
						&\wedge \forall z\leq y
					[\theta(\x,z)\downarrow]
				\end{align*}
				Then $\psi$ is a partial recursive function of
				$n$ variables
		\end{enumerate}
		A partial recursive function that is total is called a total
		recursive function; abbreviated to recursive function.
\end{defi}

We will end this section with the following definition:
\begin{defi}
	A relation $R\subset\omega^n$ where $n\geq 1$, is recursive (primtive
	recursive) if its characteristic function $\chi_R$ is recursive
	(primitive recursive). The case where $n=1$ is the case where $R$ is a
	set $A\subset\omega$ so we also have the definition of a set being
	recursive.
\end{defi}

\section{Turing Computable Functions}

Another way to describe the intuitively computable functions is via a Turing
machine. 
\begin{defi}
	A \textit{Turing machine} $M$ consists of a two-way infinite tape that
	is dived into different cells and a finite set of internal states $Q=\{
	q_0,\ldots, g_n\}$, $n\geq 1$. Each is either blank: B or has a 1
	written on them. The following three things can happen in a single
	step:
	\begin{enumerate}
		\item Change form one state to another.
		\item Change the scanned symbol $s$ to another symbol
			$s'\in S=\{1,B\}$
		\item Move the reading head one cell to the right R or the left
			L.
	\end{enumerate}
\end{defi}

\end{document}
